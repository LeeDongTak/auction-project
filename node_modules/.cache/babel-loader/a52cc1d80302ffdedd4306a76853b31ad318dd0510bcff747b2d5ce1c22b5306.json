{"ast":null,"code":"var _jsxFileName = \"/Users/eunbi/Desktop/project/auction-project/src/pages/Profile.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useEffect, useState } from \"react\";\nimport { fetchGetAuctions } from \"../api/auction\";\nimport { supabase } from \"../supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [user, setUser] = useState();\n  const {\n    data: posts\n  } = useQuery({\n    queryKey: [\"posts\"],\n    queryFn: fetchGetAuctions\n  });\n  console.log(posts);\n  useEffect(() => {\n    const fetchUser = async () => {\n      var _data$user;\n      const {\n        data\n      } = await supabase.auth.getUser();\n      setUserId((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.id);\n    };\n    fetchUser();\n  }, []);\n\n  // TODO: userInfo 가져와서 id 값과 같은 것 필터링 - 프로필\n  // TODO: userId로 게시물 필터링\n\n  console.log(userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hihi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user === null || user === void 0 ? void 0 : user.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user === null || user === void 0 ? void 0 : user.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user === null || user === void 0 ? void 0 : user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"GF4Lw/gmwNb004BI7gph1WTTGoI=\", false, function () {\n  return [useQuery];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useQuery","useEffect","useState","fetchGetAuctions","supabase","jsxDEV","_jsxDEV","Profile","_s","userId","setUserId","user","setUser","data","posts","queryKey","queryFn","console","log","fetchUser","_data$user","auth","getUser","id","children","fileName","_jsxFileName","lineNumber","columnNumber","nickname","email","_c","$RefreshReg$"],"sources":["/Users/eunbi/Desktop/project/auction-project/src/pages/Profile.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { useEffect, useState } from \"react\";\nimport { fetchGetAuctions } from \"../api/auction\";\nimport { supabase } from \"../supabase\";\n\ninterface UserInfo {\n  id: string;\n  email: string;\n  nickname: string;\n}\n\nconst Profile = () => {\n  const [userId, setUserId] = useState<string>(\"\");\n  const [user, setUser] = useState<UserInfo>();\n\n  const { data: posts } = useQuery({\n    queryKey: [\"posts\"],\n    queryFn: fetchGetAuctions,\n  });\n\n  console.log(posts);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const { data } = await supabase.auth.getUser();\n      setUserId(data.user?.id as string);\n    };\n    fetchUser();\n  }, []);\n\n  // TODO: userInfo 가져와서 id 값과 같은 것 필터링 - 프로필\n  // TODO: userId로 게시물 필터링\n\n  console.log(userId);\n\n  return (\n    <div>\n      <p>hihi</p>\n      <p>{user?.nickname}</p>\n      <p>{user?.id}</p>\n      <p>{user?.email}</p>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQvC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAW,CAAC;EAE5C,MAAM;IAAEW,IAAI,EAAEC;EAAM,CAAC,GAAGd,QAAQ,CAAC;IAC/Be,QAAQ,EAAE,CAAC,OAAO,CAAC;IACnBC,OAAO,EAAEb;EACX,CAAC,CAAC;EAEFc,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAElBb,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAAA,IAAAC,UAAA;MAC5B,MAAM;QAAEP;MAAK,CAAC,GAAG,MAAMT,QAAQ,CAACiB,IAAI,CAACC,OAAO,CAAC,CAAC;MAC9CZ,SAAS,EAAAU,UAAA,GAACP,IAAI,CAACF,IAAI,cAAAS,UAAA,uBAATA,UAAA,CAAWG,EAAY,CAAC;IACpC,CAAC;IACDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;;EAEAF,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;EAEnB,oBACEH,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAG;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACXtB,OAAA;MAAAkB,QAAA,EAAIb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtB,OAAA;MAAAkB,QAAA,EAAIb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBtB,OAAA;MAAAkB,QAAA,EAAIb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACpB,EAAA,CAhCID,OAAO;EAAA,QAIaP,QAAQ;AAAA;AAAA+B,EAAA,GAJ5BxB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}