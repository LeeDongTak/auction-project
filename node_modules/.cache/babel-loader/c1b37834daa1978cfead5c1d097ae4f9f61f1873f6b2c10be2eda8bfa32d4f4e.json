{"ast":null,"code":"var _jsxFileName = \"/Users/eunbi/Desktop/project/auction-project/src/components/LoginForm/LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from \"antd\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../../supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst onFinish = values => {\n  console.log(\"Success:\", values);\n};\nconst onFinishFailed = errorInfo => {\n  console.log(\"Failed:\", errorInfo);\n};\nconst LoginForm = ({\n  mode,\n  setMode\n}) => {\n  _s();\n  var _errors$email, _errors$password;\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const onSubmit = ({\n    email,\n    password\n  }) => {\n    if (mode === \"로그인\") {\n      signInHandler({\n        email,\n        password\n      });\n    } else {\n      signUpHandler({\n        email,\n        password\n      });\n    }\n    reset();\n  };\n  const userEmail = {\n    required: \"필수 입력란입니다.\",\n    minLength: {\n      value: 4,\n      message: \"최소 4자를 입력해주세요.\"\n    },\n    maxLength: {\n      value: 20,\n      message: \"최대 20자까지 입력하실 수 있습니다..\"\n    }\n  };\n  const userPassword = {\n    required: \"필수 입력란입니다.\",\n    minLength: {\n      value: 4,\n      message: \"최소 4자를 입력해주세요.\"\n    },\n    maxLength: {\n      value: 15,\n      message: \"최대 15자까지 입력하실 수 있습니다.\"\n    }\n  };\n  const confirmPassword = {\n    required: \"필수 입력란입니다.\",\n    minLength: {\n      value: 4,\n      message: \"최소 4자를 입력해주세요.\"\n    },\n    maxLength: {\n      value: 15,\n      message: \"최대 15자까지 입력하실 수 있습니다.\"\n    }\n  };\n  const nickname = {\n    required: \"필수 입력란입니다.\",\n    minLength: {\n      value: 1,\n      message: \"최소 1자를 입력해주세요.\"\n    },\n    maxLength: {\n      value: 10,\n      message: \"최대 10자까지 입력하실 수 있습니다.\"\n    }\n  };\n  const signInHandler = async ({\n    email,\n    password\n  }) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n        // options: {\n        //   emailRedirectTo: \"https//example.com/welcome\",\n        // },\n      });\n      console.log(email, password);\n      if (error) {\n        alert(\"아이디 또는 비밀번호를 확인해주세요\");\n      } else {\n        alert(\"성공적으로 로그인 되었습니다!\");\n        navigate(\"/\");\n      }\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const signUpHandler = async ({\n    email,\n    password\n  }) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n        // options: {\n        //   emailRedirectTo: \"https//example.com/welcome\",\n        // },\n      });\n      console.log(email, password);\n      console.log(data);\n      if (error) {\n        console.log(error);\n        alert(\"아이디와 비밀번호를 확인해주세여\");\n      } else {\n        alert(\"회원가입 되었습니다. 로그인 페이지로 이동합니다.\");\n        setMode(\"로그인\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mode === \"로그인\" ? \"로그인\" : \"회원가입\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register(\"email\", userEmail)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.email) &&\n        /*#__PURE__*/\n        // 에러 메시지\n        _jsxDEV(\"div\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          ...register(\"password\", userPassword)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.password) &&\n        /*#__PURE__*/\n        // 에러 메시지\n        _jsxDEV(\"div\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), mode === \"로그인\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          onClick: handleSubmit(signInHandler),\n          children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setMode(\"회원가입\"),\n          children: \"\\uC544\\uC9C1 \\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694? \\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          onClick: handleSubmit(signUpHandler),\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setMode(\"로그인\"),\n          children: \"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uC73C\\uC2E0\\uAC00\\uC694? \\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"G02ouyejWZWa1+fgYsd2XKsDm4k=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Button","React","useForm","useNavigate","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","onFinish","values","console","log","onFinishFailed","errorInfo","LoginForm","mode","setMode","_s","_errors$email","_errors$password","navigate","register","handleSubmit","formState","errors","reset","onSubmit","email","password","signInHandler","signUpHandler","userEmail","required","minLength","value","message","maxLength","userPassword","confirmPassword","nickname","data","error","auth","signUp","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","htmlType","onClick","_c","$RefreshReg$"],"sources":["/Users/eunbi/Desktop/project/auction-project/src/components/LoginForm/LoginForm.tsx"],"sourcesContent":["import { Button } from \"antd\";\nimport React from \"react\";\nimport { FieldValues, SubmitHandler, useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../../supabase\";\n\nconst onFinish = (values: any) => {\n  console.log(\"Success:\", values);\n};\n\nconst onFinishFailed = (errorInfo: any) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\ntype FieldType = {\n  email?: string;\n  password?: string;\n  remember?: string;\n};\n\ninterface SignFormProps {\n  mode: string;\n  setMode: React.Dispatch<React.SetStateAction<string>>;\n}\n\ntype Inputs = {\n  email: string;\n  password: string;\n};\n\nconst LoginForm: React.FC<SignFormProps> = ({ mode, setMode }) => {\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<Inputs>({ mode: \"onChange\" });\n\n  const onSubmit: SubmitHandler<FieldValues> = ({ email, password }) => {\n    if (mode === \"로그인\") {\n      signInHandler({ email, password });\n    } else {\n      signUpHandler({ email, password });\n    }\n\n    reset();\n  };\n\n  const userEmail = {\n    required: \"필수 입력란입니다.\",\n    minLength: {\n      value: 4,\n      message: \"최소 4자를 입력해주세요.\",\n    },\n    maxLength: {\n      value: 20,\n      message: \"최대 20자까지 입력하실 수 있습니다..\",\n    },\n  };\n\n  const userPassword = {\n    required: \"필수 입력란입니다.\",\n    minLength: {\n      value: 4,\n      message: \"최소 4자를 입력해주세요.\",\n    },\n    maxLength: {\n      value: 15,\n      message: \"최대 15자까지 입력하실 수 있습니다.\",\n    },\n  };\n\n  const confirmPassword = {\n    required: \"필수 입력란입니다.\",\n    minLength: {\n      value: 4,\n      message: \"최소 4자를 입력해주세요.\",\n    },\n    maxLength: {\n      value: 15,\n      message: \"최대 15자까지 입력하실 수 있습니다.\",\n    },\n  };\n\n  const nickname = {\n    required: \"필수 입력란입니다.\",\n    minLength: {\n      value: 1,\n      message: \"최소 1자를 입력해주세요.\",\n    },\n    maxLength: {\n      value: 10,\n      message: \"최대 10자까지 입력하실 수 있습니다.\",\n    },\n  };\n\n  const signInHandler = async ({ email, password }: Inputs) => {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        // options: {\n        //   emailRedirectTo: \"https//example.com/welcome\",\n        // },\n      });\n\n      console.log(email, password);\n\n      if (error) {\n        alert(\"아이디 또는 비밀번호를 확인해주세요\");\n      } else {\n        alert(\"성공적으로 로그인 되었습니다!\");\n        navigate(\"/\");\n      }\n\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const signUpHandler = async ({ email, password }: Inputs) => {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        // options: {\n        //   emailRedirectTo: \"https//example.com/welcome\",\n        // },\n      });\n\n      console.log(email, password);\n\n      console.log(data);\n      if (error) {\n        console.log(error);\n        alert(\"아이디와 비밀번호를 확인해주세여\");\n      } else {\n        alert(\"회원가입 되었습니다. 로그인 페이지로 이동합니다.\");\n        setMode(\"로그인\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>{mode === \"로그인\" ? \"로그인\" : \"회원가입\"}</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <input type=\"email\" {...register(\"email\", userEmail)} />\n          {errors?.email && ( // 에러 메시지\n            <div>{errors?.email?.message as string}</div>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"비밀번호\"\n            {...register(\"password\", userPassword)}\n          />\n          {errors?.password && ( // 에러 메시지\n            <div>{errors?.password?.message as string}</div>\n          )}\n        </div>\n\n        {mode === \"로그인\" ? (\n          <>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              onClick={handleSubmit(signInHandler)}\n            >\n              로그인하기\n            </Button>\n            <button onClick={() => setMode(\"회원가입\")}>\n              아직 계정이 없으신가요? 회원가입\n            </button>\n          </>\n        ) : (\n          <>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              onClick={handleSubmit(signUpHandler)}\n            >\n              회원가입하기\n            </Button>\n            <button onClick={() => setMode(\"로그인\")}>\n              이미 계정이 있으신가요? 로그인\n            </button>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}