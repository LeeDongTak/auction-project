{"ast":null,"code":"var _jsxFileName = \"/Users/eunbi/Desktop/project/auction-project/src/components/MyPagePosts/PostList/PostList.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Pagination } from \"antd\";\nimport { styled } from \"styled-components\";\nimport { fetchGetAuctions } from \"../../../api/auction\";\nimport ListSkeleton from \"../../ListSkeletom/ListSkeleton\";\nimport PostItem from \"./PostItem/PostItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  // localstorage로 user-id 가져오기\n  const userData = JSON.parse(localStorage.getItem(\"sb-fzdzmgqtadcebrhlgljh-auth-token\"));\n  console.log(userData.user.id);\n  const userId = userData.user.id;\n\n  // useEffect(() => {\n  //   const fetchUser = async () => {\n  //     const { data } = await supabase.auth.getUser();\n  //     setUserId(data.user?.id as string);\n  //   };\n  //   fetchUser();\n  // }, []);\n\n  const queryOption = {\n    searchKeyword: \"\",\n    categories: [],\n    limit: 20,\n    offset: 0,\n    orderBy: \"created_at\",\n    order: false,\n    user_id: userId\n  };\n  const {\n    data: posts,\n    isLoading,\n    isError,\n    error\n  } = useQuery({\n    queryKey: [\"posts\"],\n    queryFn: () => fetchGetAuctions(queryOption.searchKeyword, queryOption.categories, queryOption.limit, queryOption.offset, queryOption.orderBy, queryOption.order, queryOption.user_id),\n    enabled: !!userId\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(ListSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StPostListWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uC774\\uB984\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), posts === null || posts === void 0 ? void 0 : posts.map((post, index) => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 36\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      defaultCurrent: 1,\n      total: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"pbUC8z2B5dtarnhL6qLtosfYzgc=\", false, function () {\n  return [useQuery];\n});\n_c = PostList;\nconst StPostListWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n\n  h2 {\n    padding: 1rem 0;\n    font-size: medium;\n    font-weight: 500;\n  }\n`;\n_c2 = StPostListWrapper;\nconst StSkeleton = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport default PostList;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostList\");\n$RefreshReg$(_c2, \"StPostListWrapper\");","map":{"version":3,"names":["useQuery","Pagination","styled","fetchGetAuctions","ListSkeleton","PostItem","jsxDEV","_jsxDEV","PostList","_s","userData","JSON","parse","localStorage","getItem","console","log","user","id","userId","queryOption","searchKeyword","categories","limit","offset","orderBy","order","user_id","data","posts","isLoading","isError","error","queryKey","queryFn","enabled","fileName","_jsxFileName","lineNumber","columnNumber","StPostListWrapper","children","map","post","index","defaultCurrent","total","_c","ul","_c2","StSkeleton","div","$RefreshReg$"],"sources":["/Users/eunbi/Desktop/project/auction-project/src/components/MyPagePosts/PostList/PostList.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { Pagination } from \"antd\";\nimport { styled } from \"styled-components\";\nimport { fetchGetAuctions } from \"../../../api/auction\";\nimport { Auction_post, Category } from \"../../../types/databaseRetrunTypes\";\nimport ListSkeleton from \"../../ListSkeletom/ListSkeleton\";\nimport PostItem from \"./PostItem/PostItem\";\n\nconst PostList = () => {\n  // localstorage로 user-id 가져오기\n  const userData = JSON.parse(\n    localStorage.getItem(\"sb-fzdzmgqtadcebrhlgljh-auth-token\") as string\n  );\n\n  console.log(userData.user.id);\n  const userId = userData.user.id;\n\n  // useEffect(() => {\n  //   const fetchUser = async () => {\n  //     const { data } = await supabase.auth.getUser();\n  //     setUserId(data.user?.id as string);\n  //   };\n  //   fetchUser();\n  // }, []);\n\n  const queryOption = {\n    searchKeyword: \"\",\n    categories: [] as Pick<Category, \"category_id\">[],\n    limit: 20,\n    offset: 0,\n    orderBy: \"created_at\",\n    order: false,\n    user_id: userId,\n  };\n\n  const {\n    data: posts,\n    isLoading,\n    isError,\n    error,\n  } = useQuery<Auction_post[]>({\n    queryKey: [\"posts\"],\n    queryFn: () =>\n      fetchGetAuctions(\n        queryOption.searchKeyword,\n        queryOption.categories,\n        queryOption.limit,\n        queryOption.offset,\n        queryOption.orderBy,\n        queryOption.order,\n        queryOption.user_id\n      ),\n    enabled: !!userId,\n  });\n\n  if (isLoading) {\n    return <ListSkeleton />;\n  }\n\n  return (\n    <StPostListWrapper>\n      <h2>카테고리 이름</h2>\n      {posts?.map((post, index) => <PostItem post={post} key={index} />)}\n      <Pagination defaultCurrent={1} total={50} />\n    </StPostListWrapper>\n  );\n};\n\nconst StPostListWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n\n  h2 {\n    padding: 1rem 0;\n    font-size: medium;\n    font-weight: 500;\n  }\n`;\n\nconst StSkeleton = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}