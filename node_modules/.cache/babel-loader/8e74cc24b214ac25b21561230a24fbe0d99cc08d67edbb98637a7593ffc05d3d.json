{"ast":null,"code":"var _s = $RefreshSig$();\nimport { calculateAuctionStatusAndTime } from \"../common/dayjs\";\nimport { useEffect, useRef } from \"react\";\nimport { AuctionStatus } from \"../types/detailTyps\";\nimport { useAppDispatch } from \"../redux/config/configStore\";\nimport { selectorAuctionTimeStamp, setAuctionTimeStamp } from \"../redux/modules/auctionTimestampSlice\";\nimport { useSelector } from \"react-redux\";\nconst useAuctionStatus = data => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    auctionTimeStamp,\n    auctionOver\n  } = useSelector(selectorAuctionTimeStamp);\n  const intervalRef = useRef();\n  useEffect(() => {\n    const updateStatus = () => {\n      const result = calculateAuctionStatusAndTime(data === null || data === void 0 ? void 0 : data.auction_start_date, data === null || data === void 0 ? void 0 : data.auction_end_date);\n\n      // 조건부 업데이트\n      if (result.auctionOver !== auctionOver) {\n        dispatch(setAuctionTimeStamp(result));\n      }\n      if (result.auctionOver === AuctionStatus.START && auctionTimeStamp !== result.auctionTimeStamp) {\n        dispatch(setAuctionTimeStamp(result));\n      }\n    };\n\n    // 상태 업데이트 함수 호출\n    updateStatus();\n\n    // 1초마다 상태 업데이트\n    intervalRef.current = setInterval(updateStatus, 1000);\n\n    // 컴포넌트 언마운트시 인터벌 정리\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [data, auctionOver, auctionTimeStamp]);\n  return {\n    auctionTimeStamp,\n    auctionOver\n  };\n};\n_s(useAuctionStatus, \"VZNJOQvp0S87OQm+cJ3dppwQSIE=\", false, function () {\n  return [useAppDispatch, useSelector];\n});\nexport default useAuctionStatus;","map":{"version":3,"names":["calculateAuctionStatusAndTime","useEffect","useRef","AuctionStatus","useAppDispatch","selectorAuctionTimeStamp","setAuctionTimeStamp","useSelector","useAuctionStatus","data","_s","dispatch","auctionTimeStamp","auctionOver","intervalRef","updateStatus","result","auction_start_date","auction_end_date","START","current","setInterval","clearInterval"],"sources":["/Users/yeol/programing/project/auction_project/src/hooks/useAuctionStatus.ts"],"sourcesContent":["import { Auction_post } from \"../types/databaseRetrunTypes\";\nimport { calculateAuctionStatusAndTime } from \"../common/dayjs\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { AuctionStatus } from \"../types/detailTyps\";\nimport { useAppDispatch, useAppSelector } from \"../redux/config/configStore\";\nimport {\n  selectorAuctionTimeStamp,\n  setAuctionTimeStamp,\n} from \"../redux/modules/auctionTimestampSlice\";\nimport { useSelector } from \"react-redux\";\n\ntype Parameter =\n  | Pick<\n      Auction_post,\n      \"auction_status\" | \"auction_end_date\" | \"auction_start_date\"\n    >\n  | undefined;\n\nconst useAuctionStatus = (data: Parameter) => {\n  const dispatch = useAppDispatch();\n  const { auctionTimeStamp, auctionOver } = useSelector(\n    selectorAuctionTimeStamp\n  );\n  const intervalRef = useRef<NodeJS.Timeout>();\n\n  useEffect(() => {\n    const updateStatus = () => {\n      const result = calculateAuctionStatusAndTime(\n        data?.auction_start_date,\n        data?.auction_end_date\n      );\n\n      // 조건부 업데이트\n      if (result.auctionOver !== auctionOver) {\n        dispatch(setAuctionTimeStamp(result));\n      }\n\n      if (\n        result.auctionOver === AuctionStatus.START &&\n        auctionTimeStamp !== result.auctionTimeStamp\n      ) {\n        dispatch(setAuctionTimeStamp(result));\n      }\n    };\n\n    // 상태 업데이트 함수 호출\n    updateStatus();\n\n    // 1초마다 상태 업데이트\n    intervalRef.current = setInterval(updateStatus, 1000);\n\n    // 컴포넌트 언마운트시 인터벌 정리\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [data, auctionOver, auctionTimeStamp]);\n\n  return { auctionTimeStamp, auctionOver };\n};\n\nexport default useAuctionStatus;\n"],"mappings":";AACA,SAASA,6BAA6B,QAAQ,iBAAiB;AAC/D,SAASC,SAAS,EAAEC,MAAM,QAAkB,OAAO;AACnD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,cAAc,QAAwB,6BAA6B;AAC5E,SACEC,wBAAwB,EACxBC,mBAAmB,QACd,wCAAwC;AAC/C,SAASC,WAAW,QAAQ,aAAa;AASzC,MAAMC,gBAAgB,GAAIC,IAAe,IAAK;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGP,cAAc,CAAC,CAAC;EACjC,MAAM;IAAEQ,gBAAgB;IAAEC;EAAY,CAAC,GAAGN,WAAW,CACnDF,wBACF,CAAC;EACD,MAAMS,WAAW,GAAGZ,MAAM,CAAiB,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,MAAM,GAAGhB,6BAA6B,CAC1CS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,kBAAkB,EACxBR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,gBACR,CAAC;;MAED;MACA,IAAIF,MAAM,CAACH,WAAW,KAAKA,WAAW,EAAE;QACtCF,QAAQ,CAACL,mBAAmB,CAACU,MAAM,CAAC,CAAC;MACvC;MAEA,IACEA,MAAM,CAACH,WAAW,KAAKV,aAAa,CAACgB,KAAK,IAC1CP,gBAAgB,KAAKI,MAAM,CAACJ,gBAAgB,EAC5C;QACAD,QAAQ,CAACL,mBAAmB,CAACU,MAAM,CAAC,CAAC;MACvC;IACF,CAAC;;IAED;IACAD,YAAY,CAAC,CAAC;;IAEd;IACAD,WAAW,CAACM,OAAO,GAAGC,WAAW,CAACN,YAAY,EAAE,IAAI,CAAC;;IAErD;IACA,OAAO,MAAM;MACX,IAAID,WAAW,CAACM,OAAO,EAAE;QACvBE,aAAa,CAACR,WAAW,CAACM,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACX,IAAI,EAAEI,WAAW,EAAED,gBAAgB,CAAC,CAAC;EAEzC,OAAO;IAAEA,gBAAgB;IAAEC;EAAY,CAAC;AAC1C,CAAC;AAACH,EAAA,CA1CIF,gBAAgB;EAAA,QACHJ,cAAc,EACWG,WAAW;AAAA;AA0CvD,eAAeC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}