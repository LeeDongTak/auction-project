{"ast":null,"code":"var _jsxFileName = \"/Users/eunbi/Desktop/project/auction-project/src/pages/Profile.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useEffect, useState } from \"react\";\nimport { fetchGetAuctions } from \"../api/auction\";\nimport MyPagePosts from \"../components/MyPagePosts/MyPagePosts\";\nimport UserProfile from \"../components/UserProfile/UserProfile\";\nimport { supabase } from \"../supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [user, setUser] = useState();\n  const queryOption = {\n    searchKeyword: \"\",\n    categories: [],\n    limit: 20,\n    offset: 0,\n    orderBy: \"created_at\",\n    order: false,\n    user_id: userId\n  };\n  const {\n    data: posts\n  } = useQuery({\n    queryKey: [\"posts\"],\n    queryFn: () => fetchGetAuctions(queryOption.searchKeyword, queryOption.categories, queryOption.limit, queryOption.offset, queryOption.orderBy, queryOption.order, queryOption.user_id)\n  });\n  console.log(posts);\n  useEffect(() => {\n    const fetchUser = async () => {\n      var _data$user;\n      const {\n        data\n      } = await supabase.auth.getUser();\n      setUserId((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.id);\n    };\n    fetchUser();\n  }, []);\n\n  // TODO: userInfo 가져와서 id 값과 같은 것 필터링 - 프로필\n  // TODO: userId로 게시물 필터링\n  // TODO: 내가 올린 목록, 내가 참여한? 목록, 찜한 목록\n  // TODO: 프로필 수정\n\n  console.log(userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyPagePosts, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"GF4Lw/gmwNb004BI7gph1WTTGoI=\", false, function () {\n  return [useQuery];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useQuery","useEffect","useState","fetchGetAuctions","MyPagePosts","UserProfile","supabase","jsxDEV","_jsxDEV","Profile","_s","userId","setUserId","user","setUser","queryOption","searchKeyword","categories","limit","offset","orderBy","order","user_id","data","posts","queryKey","queryFn","console","log","fetchUser","_data$user","auth","getUser","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eunbi/Desktop/project/auction-project/src/pages/Profile.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { useEffect, useState } from \"react\";\nimport { fetchGetAuctions } from \"../api/auction\";\nimport MyPagePosts from \"../components/MyPagePosts/MyPagePosts\";\nimport UserProfile from \"../components/UserProfile/UserProfile\";\nimport { supabase } from \"../supabase\";\nimport { Auction_post, Category } from \"../types/databaseRetrunTypes\";\n\ninterface UserInfo {\n  id: string;\n  email: string;\n  nickname: string;\n}\n\nconst Profile = () => {\n  const [userId, setUserId] = useState<string>(\"\");\n  const [user, setUser] = useState<UserInfo>();\n\n  const queryOption = {\n    searchKeyword: \"\",\n    categories: [] as Pick<Category, \"category_id\">[],\n    limit: 20,\n    offset: 0,\n    orderBy: \"created_at\",\n    order: false,\n    user_id: userId,\n  };\n\n  const { data: posts } = useQuery<Auction_post[]>({\n    queryKey: [\"posts\"],\n    queryFn: () =>\n      fetchGetAuctions(\n        queryOption.searchKeyword,\n        queryOption.categories,\n        queryOption.limit,\n        queryOption.offset,\n        queryOption.orderBy,\n        queryOption.order,\n        queryOption.user_id\n      ),\n  });\n\n  console.log(posts);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const { data } = await supabase.auth.getUser();\n      setUserId(data.user?.id as string);\n    };\n    fetchUser();\n  }, []);\n\n  // TODO: userInfo 가져와서 id 값과 같은 것 필터링 - 프로필\n  // TODO: userId로 게시물 필터링\n  // TODO: 내가 올린 목록, 내가 참여한? 목록, 찜한 목록\n  // TODO: 프로필 수정\n\n  console.log(userId);\n\n  return (\n    <div>\n      {/* 프로필 */}\n      <UserProfile />\n      {/* 리스트 컨테이너 - 메뉴, 리스트 */}\n      <MyPagePosts userId={userId} />\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASvC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAW,CAAC;EAE5C,MAAMa,WAAW,GAAG;IAClBC,aAAa,EAAE,EAAE;IACjBC,UAAU,EAAE,EAAqC;IACjDC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,YAAY;IACrBC,KAAK,EAAE,KAAK;IACZC,OAAO,EAAEX;EACX,CAAC;EAED,MAAM;IAAEY,IAAI,EAAEC;EAAM,CAAC,GAAGxB,QAAQ,CAAiB;IAC/CyB,QAAQ,EAAE,CAAC,OAAO,CAAC;IACnBC,OAAO,EAAEA,CAAA,KACPvB,gBAAgB,CACdY,WAAW,CAACC,aAAa,EACzBD,WAAW,CAACE,UAAU,EACtBF,WAAW,CAACG,KAAK,EACjBH,WAAW,CAACI,MAAM,EAClBJ,WAAW,CAACK,OAAO,EACnBL,WAAW,CAACM,KAAK,EACjBN,WAAW,CAACO,OACd;EACJ,CAAC,CAAC;EAEFK,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAElBvB,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAAA,IAAAC,UAAA;MAC5B,MAAM;QAAEP;MAAK,CAAC,GAAG,MAAMjB,QAAQ,CAACyB,IAAI,CAACC,OAAO,CAAC,CAAC;MAC9CpB,SAAS,EAAAkB,UAAA,GAACP,IAAI,CAACV,IAAI,cAAAiB,UAAA,uBAATA,UAAA,CAAWG,EAAY,CAAC;IACpC,CAAC;IACDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;;EAEAF,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;EAEnB,oBACEH,OAAA;IAAA0B,QAAA,gBAEE1B,OAAA,CAACH,WAAW;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEf9B,OAAA,CAACJ,WAAW;MAACO,MAAM,EAAEA;IAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAAC5B,EAAA,CArDID,OAAO;EAAA,QAcaT,QAAQ;AAAA;AAAAuC,EAAA,GAd5B9B,OAAO;AAuDb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}