{"ast":null,"code":"import connectSupabase from \"./connectSupabase\";\nexport const fetchAuctionMaxBid = async auction_id => {\n  console.log(\"fetchAuctionMaxBid => \", auction_id);\n  const {\n    data,\n    error\n  } = await connectSupabase.from(\"bids\").select(\"*\").eq(\"auction_id\", auction_id);\n  if (error) throw new Error(error.message);\n  return data === null || data === void 0 ? void 0 : data.reduce((acc, cur) => {\n    if (acc.bid_price < cur.bid_price) acc = cur;\n    return acc;\n  }, data ? data[0] : {\n    bid_price: 0\n  });\n};","map":{"version":3,"names":["connectSupabase","fetchAuctionMaxBid","auction_id","console","log","data","error","from","select","eq","Error","message","reduce","acc","cur","bid_price"],"sources":["/Users/yeol/programing/project/auction_project/src/api/bid.ts"],"sourcesContent":["import { Bids } from \"../types/databaseRetrunTypes\";\nimport connectSupabase from \"./connectSupabase\";\n\nexport const fetchAuctionMaxBid = async (auction_id: string): Promise<Bids> => {\n  console.log(\"fetchAuctionMaxBid => \", auction_id);\n  const { data, error } = await connectSupabase\n    .from(\"bids\")\n    .select(\"*\")\n    .eq(\"auction_id\", auction_id);\n\n  if (error) throw new Error(error.message);\n\n  return data?.reduce(\n    (acc, cur) => {\n      if (acc.bid_price < cur.bid_price) acc = cur;\n      return acc;\n    },\n    data ? data[0] : { bid_price: 0 }\n  ) as Bids;\n};\n"],"mappings":"AACA,OAAOA,eAAe,MAAM,mBAAmB;AAE/C,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,UAAkB,IAAoB;EAC7EC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,UAAU,CAAC;EACjD,MAAM;IAAEG,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMN,eAAe,CAC1CO,IAAI,CAAC,MAAM,CAAC,CACZC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,YAAY,EAAEP,UAAU,CAAC;EAE/B,IAAII,KAAK,EAAE,MAAM,IAAII,KAAK,CAACJ,KAAK,CAACK,OAAO,CAAC;EAEzC,OAAON,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,MAAM,CACjB,CAACC,GAAG,EAAEC,GAAG,KAAK;IACZ,IAAID,GAAG,CAACE,SAAS,GAAGD,GAAG,CAACC,SAAS,EAAEF,GAAG,GAAGC,GAAG;IAC5C,OAAOD,GAAG;EACZ,CAAC,EACDR,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAG;IAAEU,SAAS,EAAE;EAAE,CAClC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}