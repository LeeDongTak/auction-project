{"ast":null,"code":"import connectSupabase from \"./connectSupabase\";\nexport const fetchAuctionMaxBid = async auction_id => {\n  const {\n    data,\n    error\n  } = await connectSupabase.from(\"bids\").select(\"*\").eq(\"auction_id\", auction_id);\n  if (error) throw new Error(error.message);\n  const maxBid = data === null || data === void 0 ? void 0 : data.reduce((acc, cur) => {\n    if (acc.bid_price < cur.bid_price) acc = cur;\n    return acc;\n  }, {});\n  console.log(maxBid);\n  return data;\n};","map":{"version":3,"names":["connectSupabase","fetchAuctionMaxBid","auction_id","data","error","from","select","eq","Error","message","maxBid","reduce","acc","cur","bid_price","console","log"],"sources":["/Users/yeol/programing/project/auction_project/src/api/bid.ts"],"sourcesContent":["import connectSupabase from \"./connectSupabase\";\nimport { Bids } from \"../types/databaseRetrunTypes\";\n\nexport const fetchAuctionMaxBid = async (\n  auction_id: string\n): Promise<Bids | Error> => {\n  const { data, error } = await connectSupabase\n    .from(\"bids\")\n    .select(\"*\")\n    .eq(\"auction_id\", auction_id);\n\n  if (error) throw new Error(error.message);\n\n  const maxBid = data?.reduce((acc, cur) => {\n    if (acc.bid_price < cur.bid_price) acc = cur;\n    return acc;\n  }, {} as Bids);\n\n  console.log(maxBid);\n\n  return data;\n};\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAG/C,OAAO,MAAMC,kBAAkB,GAAG,MAChCC,UAAkB,IACQ;EAC1B,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMJ,eAAe,CAC1CK,IAAI,CAAC,MAAM,CAAC,CACZC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,YAAY,EAAEL,UAAU,CAAC;EAE/B,IAAIE,KAAK,EAAE,MAAM,IAAII,KAAK,CAACJ,KAAK,CAACK,OAAO,CAAC;EAEzC,MAAMC,MAAM,GAAGP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IACxC,IAAID,GAAG,CAACE,SAAS,GAAGD,GAAG,CAACC,SAAS,EAAEF,GAAG,GAAGC,GAAG;IAC5C,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAS,CAAC;EAEdG,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EAEnB,OAAOP,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}