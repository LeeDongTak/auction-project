{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useEffect } from \"react\";\nexport function useCustomQuery(queryOptions) {\n  _s();\n  const {\n    isLoading,\n    isError,\n    error,\n    data\n  } = useQuery(queryOptions);\n  useEffect(() => {\n    // loading 처리\n    if (isLoading) {\n      console.log(\"isLoading\", isLoading);\n    }\n  }, [isLoading]);\n  useEffect(() => {\n    // error 처리\n    if (isError) {}\n  }, [isError, error]);\n  return data;\n}\n_s(useCustomQuery, \"WEEE3v7boRjvNY3Lcny1t8VzXHY=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","useEffect","useCustomQuery","queryOptions","_s","isLoading","isError","error","data","console","log"],"sources":["/Users/yeol/programing/project/auction_project/src/hooks/useCustomQuery.ts"],"sourcesContent":["import { useQuery, UseQueryOptions } from \"@tanstack/react-query\";\nimport { useEffect } from \"react\";\n\nexport function useCustomQuery<T, TError extends Error = Error>(\n  queryOptions: UseQueryOptions<T, TError>\n): T | undefined {\n  const { isLoading, isError, error, data } = useQuery<T, TError>(queryOptions);\n\n  useEffect(() => {\n    // loading 처리\n    if (isLoading) {\n      console.log(\"isLoading\", isLoading);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    // error 처리\n    if (isError) {\n    }\n  }, [isError, error]);\n\n  return data;\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAyB,uBAAuB;AACjE,SAASC,SAAS,QAAQ,OAAO;AAEjC,OAAO,SAASC,cAAcA,CAC5BC,YAAwC,EACzB;EAAAC,EAAA;EACf,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAAYG,YAAY,CAAC;EAE7EF,SAAS,CAAC,MAAM;IACd;IACA,IAAII,SAAS,EAAE;MACbI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,SAAS,CAAC;IACrC;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEfJ,SAAS,CAAC,MAAM;IACd;IACA,IAAIK,OAAO,EAAE,CACb;EACF,CAAC,EAAE,CAACA,OAAO,EAAEC,KAAK,CAAC,CAAC;EAEpB,OAAOC,IAAI;AACb;AAACJ,EAAA,CAnBeF,cAAc;EAAA,QAGgBF,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}