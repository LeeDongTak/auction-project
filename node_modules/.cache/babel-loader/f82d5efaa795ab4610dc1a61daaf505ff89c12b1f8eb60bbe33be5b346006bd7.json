{"ast":null,"code":"var _jsxFileName = \"/Users/eunbi/Desktop/project/auction-project/src/share/AuthLayout.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { supabase } from \"../supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthLayout = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(false);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const {\n          data: {\n            user\n          },\n          error\n        } = await supabase.auth.getUser();\n        if (error) {\n          throw error;\n        }\n        console.log(user);\n        if (user) {\n          setIsLogin(true);\n        }\n      } catch (error) {\n        console.error(\"에러가 발생했습니다\");\n      }\n    };\n    fetchUser();\n  }, []);\n  console.log(isLogin);\n  if (!isLogin) {\n    alert(\"로그인이 필요한 페이지입니다. 로그인 페이지로 이동합니다!\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthLayout, \"hT9YX5q3Ouj0n/k+Fvtlr/oV70A=\");\n_c = AuthLayout;\nexport default AuthLayout;\nvar _c;\n$RefreshReg$(_c, \"AuthLayout\");","map":{"version":3,"names":["useEffect","useState","Navigate","Outlet","supabase","jsxDEV","_jsxDEV","AuthLayout","_s","isLogin","setIsLogin","fetchUser","data","user","error","auth","getUser","console","log","alert","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/eunbi/Desktop/project/auction-project/src/share/AuthLayout.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { supabase } from \"../supabase\";\n\nconst AuthLayout = () => {\n  const [isLogin, setIsLogin] = useState(false);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const {\n          data: { user },\n          error,\n        } = await supabase.auth.getUser();\n\n        if (error) {\n          throw error;\n        }\n        console.log(user);\n\n        if (user) {\n          setIsLogin(true);\n        }\n      } catch (error) {\n        console.error(\"에러가 발생했습니다\");\n      }\n    };\n    fetchUser();\n  }, []);\n\n  console.log(isLogin);\n\n  if (!isLogin) {\n    alert(\"로그인이 필요한 페이지입니다. 로그인 페이지로 이동합니다!\");\n    return <Navigate to={\"/login\"} replace />;\n  }\n\n  return (\n    <div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default AuthLayout;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM;UACJC,IAAI,EAAE;YAAEC;UAAK,CAAC;UACdC;QACF,CAAC,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC;QAEjC,IAAIF,KAAK,EAAE;UACT,MAAMA,KAAK;QACb;QACAG,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;QAEjB,IAAIA,IAAI,EAAE;UACRH,UAAU,CAAC,IAAI,CAAC;QAClB;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdG,OAAO,CAACH,KAAK,CAAC,YAAY,CAAC;MAC7B;IACF,CAAC;IACDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENM,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;EAEpB,IAAI,CAACA,OAAO,EAAE;IACZU,KAAK,CAAC,kCAAkC,CAAC;IACzC,oBAAOb,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAE,QAAS;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;EAEA,oBACEnB,OAAA;IAAAoB,QAAA,eACEpB,OAAA,CAACH,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCID,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}