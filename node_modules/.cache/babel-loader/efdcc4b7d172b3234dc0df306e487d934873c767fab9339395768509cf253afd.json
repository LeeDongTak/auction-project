{"ast":null,"code":"var _jsxFileName = \"/Users/eunbi/Desktop/project/auction-project/src/components/UserProfile/UserProfile.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Skeleton } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { getUserInfo } from \"../../api/auth\";\nimport { supabase } from \"../../supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [avatarShape, setAvatarShape] = useState(\"circle\");\n  const {\n    data: user,\n    isLoading,\n    isError,\n    error\n  } = useQuery({\n    queryKey: [\"user\"],\n    queryFn: () => getUserInfo(userId)\n  });\n  console.log(user);\n  useEffect(() => {\n    const fetchUser = async () => {\n      var _data$user;\n      const {\n        data\n      } = await supabase.auth.getUser();\n      setUserId((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.id);\n    };\n    fetchUser();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(StSkeleton, {\n    children: [/*#__PURE__*/_jsxDEV(Skeleton.Avatar, {\n      active: true,\n      shape: avatarShape,\n      size: 70\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton.Input, {\n      active: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(StProfileContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StImgBox, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), user === null || user === void 0 ? void 0 : user.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 28\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"kanEtJAvD2LAbq9OwoWa/UII7V4=\", false, function () {\n  return [useQuery];\n});\n_c = UserProfile;\nconst StProfileContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  gap: 1rem;\n  padding: 3rem;\n  font-size: 2rem;\n  border: 1px solid #222;\n  background-color: #eee;\n`;\n_c2 = StProfileContainer;\nconst StImgBox = styled.div`\n  background-color: gray;\n  width: 6rem;\n  height: 6rem;\n  border-radius: 50%;\n`;\n_c3 = StImgBox;\nconst StSkeleton = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2rem;\n  gap: 1.5rem;\n`;\n_c4 = StSkeleton;\nexport default UserProfile;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UserProfile\");\n$RefreshReg$(_c2, \"StProfileContainer\");\n$RefreshReg$(_c3, \"StImgBox\");\n$RefreshReg$(_c4, \"StSkeleton\");","map":{"version":3,"names":["useQuery","Skeleton","useEffect","useState","styled","getUserInfo","supabase","jsxDEV","_jsxDEV","UserProfile","_s","userId","setUserId","avatarShape","setAvatarShape","data","user","isLoading","isError","error","queryKey","queryFn","console","log","fetchUser","_data$user","auth","getUser","id","StSkeleton","children","Avatar","active","shape","size","fileName","_jsxFileName","lineNumber","columnNumber","Input","StProfileContainer","StImgBox","src","alt","map","item","nickname","_c","div","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/eunbi/Desktop/project/auction-project/src/components/UserProfile/UserProfile.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { Skeleton } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { getUserInfo } from \"../../api/auth\";\nimport { supabase } from \"../../supabase\";\n\ntype AvatarShapeType = \"circle\" | \"square\";\n\nconst UserProfile = () => {\n  const [userId, setUserId] = useState<string>(\"\");\n  const [avatarShape, setAvatarShape] = useState<AvatarShapeType>(\"circle\");\n\n  const {\n    data: user,\n    isLoading,\n    isError,\n    error,\n  } = useQuery({ queryKey: [\"user\"], queryFn: () => getUserInfo(userId) });\n\n  console.log(user);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const { data } = await supabase.auth.getUser();\n      setUserId(data.user?.id as string);\n    };\n    fetchUser();\n  }, []);\n\n  if (isLoading)\n    return (\n      <StSkeleton>\n        <Skeleton.Avatar active shape={avatarShape} size={70} />\n        <Skeleton.Input active />\n      </StSkeleton>\n    );\n\n  return (\n    <StProfileContainer>\n      <StImgBox>\n        <img src=\"\" alt=\"img\" />\n      </StImgBox>\n      {user?.map((item) => <p>{item.nickname}</p>)}\n    </StProfileContainer>\n  );\n};\n\nconst StProfileContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  gap: 1rem;\n  padding: 3rem;\n  font-size: 2rem;\n  border: 1px solid #222;\n  background-color: #eee;\n`;\n\nconst StImgBox = styled.div`\n  background-color: gray;\n  width: 6rem;\n  height: 6rem;\n  border-radius: 50%;\n`;\n\nconst StSkeleton = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2rem;\n  gap: 1.5rem;\n`;\n\nexport default UserProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}