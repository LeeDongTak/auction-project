{"ast":null,"code":"// auction 전체 호출 (조건에 따라 필터링 호출)\n\nimport connectSupabase from \"./connectSupabase\";\n\n/**\n * auction 전체 데이터 호출\n * @returns Auction_post[]\n */\nexport async function fetchGetAuctions(searchKeyword = \"\", categories, limit = 20, offset = 0, orderBy = \"created_at\", order = false) {\n  const query = connectSupabase.from(\"auction_post\").select(\"*, category(category_name), user_info(user_email)\").order(`${orderBy}`, {\n    ascending: order\n  });\n  if (searchKeyword) {\n    query.like(\"title\", `%${searchKeyword}%`).like(\"content\", `%${searchKeyword}%`);\n  }\n  if (categories.length > 0) {\n    query.in(\"category_id\", categories);\n  }\n  const {\n    data,\n    error\n  } = await query.returns();\n  if (error) throw new Error(error.message);\n  return data;\n}\nexport const fetchGetCategories = async () => {\n  const {\n    data,\n    error\n  } = await connectSupabase.from(\"category\").select(\"*\");\n  if (error) throw new Error(error.message);\n  return data;\n};\n\n/**\n * auction_id로 auction 데이터 호출\n * @param auction_id\n */\nexport const fetchGetAuctionById = async auction_id => {\n  const {\n    data,\n    error\n  } = await connectSupabase.from(\"auction_post\").select(`\n      *, auction_images(image_id, image_path),\n      category(category_name)`).eq(\"auction_id\", auction_id).returns().single();\n  if (error) throw new Error(error.message);\n  console.log(data);\n  return data;\n};","map":{"version":3,"names":["connectSupabase","fetchGetAuctions","searchKeyword","categories","limit","offset","orderBy","order","query","from","select","ascending","like","length","in","data","error","returns","Error","message","fetchGetCategories","fetchGetAuctionById","auction_id","eq","single","console","log"],"sources":["/Users/eunbi/Desktop/project/auction-project/src/api/auction.ts"],"sourcesContent":["// auction 전체 호출 (조건에 따라 필터링 호출)\nimport { Auction_post, Category } from \"../types/databaseRetrunTypes\";\nimport connectSupabase from \"./connectSupabase\";\n\n/**\n * auction 전체 데이터 호출\n * @returns Auction_post[]\n */\nexport async function fetchGetAuctions(\n  searchKeyword: string = \"\",\n  categories: Pick<Category, \"category_id\">[],\n  limit: number = 20,\n  offset: number = 0,\n  orderBy: string = \"created_at\",\n  order: boolean = false\n) {\n  const query = connectSupabase\n    .from(\"auction_post\")\n    .select(\"*, category(category_name), user_info(user_email)\")\n    .order(`${orderBy}`, { ascending: order });\n\n  if (searchKeyword) {\n    query\n      .like(\"title\", `%${searchKeyword}%`)\n      .like(\"content\", `%${searchKeyword}%`);\n  }\n\n  if (categories.length > 0) {\n    query.in(\"category_id\", categories);\n  }\n\n  const { data, error } = await query.returns<Auction_post[]>();\n  if (error) throw new Error(error.message);\n  return data;\n}\n\nexport const fetchGetCategories = async () => {\n  const { data, error } = await connectSupabase.from(\"category\").select(\"*\");\n\n  if (error) throw new Error(error.message);\n  return data;\n};\n\n/**\n * auction_id로 auction 데이터 호출\n * @param auction_id\n */\nexport const fetchGetAuctionById = async (auction_id: string) => {\n  const { data, error } = await connectSupabase\n    .from(\"auction_post\")\n    .select(\n      `\n      *, auction_images(image_id, image_path),\n      category(category_name)`\n    )\n    .eq(\"auction_id\", auction_id)\n    .returns<Auction_post>()\n    .single();\n  if (error) throw new Error(error.message);\n\n  console.log(data);\n\n  return data;\n};\n"],"mappings":"AAAA;;AAEA,OAAOA,eAAe,MAAM,mBAAmB;;AAE/C;AACA;AACA;AACA;AACA,OAAO,eAAeC,gBAAgBA,CACpCC,aAAqB,GAAG,EAAE,EAC1BC,UAA2C,EAC3CC,KAAa,GAAG,EAAE,EAClBC,MAAc,GAAG,CAAC,EAClBC,OAAe,GAAG,YAAY,EAC9BC,KAAc,GAAG,KAAK,EACtB;EACA,MAAMC,KAAK,GAAGR,eAAe,CAC1BS,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CAAC,mDAAmD,CAAC,CAC3DH,KAAK,CAAE,GAAED,OAAQ,EAAC,EAAE;IAAEK,SAAS,EAAEJ;EAAM,CAAC,CAAC;EAE5C,IAAIL,aAAa,EAAE;IACjBM,KAAK,CACFI,IAAI,CAAC,OAAO,EAAG,IAAGV,aAAc,GAAE,CAAC,CACnCU,IAAI,CAAC,SAAS,EAAG,IAAGV,aAAc,GAAE,CAAC;EAC1C;EAEA,IAAIC,UAAU,CAACU,MAAM,GAAG,CAAC,EAAE;IACzBL,KAAK,CAACM,EAAE,CAAC,aAAa,EAAEX,UAAU,CAAC;EACrC;EAEA,MAAM;IAAEY,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMR,KAAK,CAACS,OAAO,CAAiB,CAAC;EAC7D,IAAID,KAAK,EAAE,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EACzC,OAAOJ,IAAI;AACb;AAEA,OAAO,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAM;IAAEL,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMhB,eAAe,CAACS,IAAI,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;EAE1E,IAAIM,KAAK,EAAE,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EACzC,OAAOJ,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMM,mBAAmB,GAAG,MAAOC,UAAkB,IAAK;EAC/D,MAAM;IAAEP,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMhB,eAAe,CAC1CS,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CACJ;AACP;AACA,8BACI,CAAC,CACAa,EAAE,CAAC,YAAY,EAAED,UAAU,CAAC,CAC5BL,OAAO,CAAe,CAAC,CACvBO,MAAM,CAAC,CAAC;EACX,IAAIR,KAAK,EAAE,MAAM,IAAIE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;EAEzCM,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;EAEjB,OAAOA,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}